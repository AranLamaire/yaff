sudo: false
# Do not use Travis Python to save some time.
language: generic
env:
  matrix:
  - MYCONDAPY=2.7
install:
# Get miniconda. Take the right version, so re-installing python is only needed for 3.5.
- if [[ "$MYCONDAPY" == "2.7" ]]; then
     wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
  else
     wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r

# Configure conda and get a few essentials
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
# Get the right python version for building. This only does something for 3.5
- conda install python=${MYCONDAPY}
# Install extra package needed to make things work. Most things can be listed as
# dependencies on metal.yaml and setup.py, unless setup.py already imports them.
- conda install numpy cython sphinx
# Install conda tools for packaging and uploading
- conda install conda-build anaconda-client
# Add the tovrstra channel to get access to the molmod dependency
- conda config --add channels tovrstra
- conda info -a

# Build the conda package
- conda build -q conda.recipe

# Build source package, should work too and needed for deployment.
- python setup.py sdist

# Install Conda package
- conda install --use-local yaff

# Compile documentation
- (cd doc; make html)
script:
# Run tests out of source tree, to make sure that installed version is tested.
- "(cd; nosetests yaff -v --processes=2 --detailed-errors --process-timeout=600)"

# Basic code checks
- ./checkwhitespace.py $(find . -type f | egrep '(\.py$)|(\.c$)|(\.pyx$)|(\.pxd$)|(\.h$)|(\.rst$)|(\.in$)|(\.yml$)|(\.yaml$)')
